import java.util.regex.Pattern

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}
apply plugin: 'android'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.example.wojder.gradlexirtam"
        minSdkVersion 16
        targetSdkVersion 21
        versionName "1.0"

    }
    signingConfigs {
        releaseConfig {
            storeFile file("gradlekeystore.jks")
            storePassword ("123456")
            keyAlias "XirtamAlias"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            debuggable false;
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            debuggable true;
        }
    }
    productFlavors {
        continous {
            applicationId = "com.example.wojder.gradlexirtam.cont"
        }
        beta {
            applicationId = "com.example.wojder.gradlexirtam.beta"
        }
    }
    lintOptions {
        abortOnError false
    }
}

task('incrementManifestVersionCode') << {
        println "Importing Version Code from manifest and autoincrement"
        def manifestFile = file("src/main/AndroidManifest.xml")
        def versionCodePattern = Pattern.compile("versionCode=\"(\\d+)\"")
        def manifestText = manifestFile.getText()
        def versionCodeMatcher = versionCodePattern.matcher(manifestText)
        versionCodeMatcher.find()
        def currentVersionCode = Integer.parseInt(versionCodeMatcher.group(1))
        def incrementedVersionCode = (currentVersionCode + 1)
        def manifestContent = versionCodeMatcher.replaceAll("versionCode=\"" + incrementedVersionCode + "\"")
        manifestFile.write(manifestContent)
        println sprintf("New versionCode is %s", incrementedVersionCode)

        return incrementedVersionCode
    }
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleBetaRelease') {
        task.dependsOn 'incrementManifestVersionCode'
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
}